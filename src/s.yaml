edition: 3.0.0 #  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范
name: fc-stable-diffusion
access: default
vars:
  region: "{{ region }}" 
  prefix: "{{namespace}}"
  functionName: "{{ functionName }}" 
  imageUrl: "registry.{{region}}.aliyuncs.com/aliyun-fc/fc-stable-diffusion:{{ if type === '动漫风格' }}anime-v14{{ else if type === '真人风格'}}realman-v14{{else if type === '轻量版'}}lite-v6{{else if type === 'TensorRT'}}tensorrt-v1{{ else }}sd1.5-v14{{/if}}" 
  filemgrToken: "{{ filemgrToken || '' }}"
  enableCollect: "{{ enableCollect || '' }}"
  filemgrFilename: "filemgr-1.2.2"
  roleArn: "{{roleArn}}"
  extraArgs: ""

resources:
  sd:
    component: fc3
    actions: 
      post-deploy: 
        - component: fc ondemand put --qualifier LATEST --max 1
    props:
      region: ${vars.region}
      functionName: "${vars.prefix}__${vars.functionName}"
      description: Stable Diffusion WebUI 函数
      handler: index.handler
      role: ${vars.roleArn}
      timeout: 600
      diskSize: 512
      caPort: 7860
      gpuConfig:
        gpuMemorySize: 16384
        gpuType: fc.gpu.tesla.1
      runtime: custom-container
      cpu: 8
      customContainerConfig:
        accelerationType: Default
        image: ${vars.imageUrl}
        webServerMode: true
      instanceConcurrency: 100
      memorySize: 32768
      environmentVariables:
        EXTRA_ARGS: "${vars.extraArgs}"
        ENABLE_COLLECT: "${vars.enableCollect}"

  filemgr:
    component: fc3
    actions: 
      pre-deploy:
        - run: |
            mkdir -p code && \
            cd code && \
            curl http://serverless-tool-images.oss-cn-hangzhou.aliyuncs.com/aigc/filemgr/${vars.filemgrFilename}.zip -o filemgr.zip && \
            unzip -o filemgr.zip && \
            mv dist/ filemgr
          path: ./
    props:
      region: ${vars.region}
      functionName: "${vars.prefix}__admin"
      description: '模型管理辅助工具'
      code: './code/filemgr'
      runtime: custom
      timeout: 7200
      memorySize: 3072
      cpu: 2.0
      diskSize: 512
      instanceConcurrency: 16
      caPort: 9000
      role: ${vars.roleArn}
      customRuntimeConfig:
        command:
          - ./server
      environmentVariables:
        TOKEN: "${vars.filemgrToken}"
        ENABLE_COLLECT: "${vars.enableCollect}"
        # SD_VERSION: ""
        # SD_FUNCTION_NAME: ${stable-diffusion.props.function.name}
        # SD_DOMAIN: ${stable-diffusion.output.url.custom_domain[0].domain}
      layers:
        - "acs:fc:${vars.region}:official:layers/ServerlessDevs/versions/1"
        - "acs:fc:${vars.region}:official:layers/Python310/versions/2"

  custom-domain-sd:
    component: fc3-domain
    props: #  组件的属性值
      region: ${vars.region} 
      domainName: auto
      protocol: HTTP
      routeConfig:
        routes:
          - functionName: ${resources.sd.props.functionName}
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            path: /*
            qualifier: LATEST

  custom-domain-filemgr:
      component: fc3-domain
      props: #  组件的属性值
        region: ${vars.region} 
        domainName: auto
        protocol: HTTP
        routeConfig:
          routes:
            - functionName: ${resources.filemgr.props.functionName}
              methods:
                - GET
                - POST
                - PUT
                - DELETE
              path: /*
              qualifier: LATEST